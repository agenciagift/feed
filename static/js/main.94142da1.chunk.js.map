{"version":3,"sources":["firebase/config.js","constants/colors.js","constants/sizes.js","components/form.js","components/layout.js","components/AddLink/index.js","constants/appConfig.js","app/slices/search.js","app/constants.js","components/Search/index.js","components/Header/styled.js","components/Header/index.js","hooks/useFirestore.js","components/LinkItem/styled.js","components/LinkItem/index.js","components/LinkList/styled.js","components/LinkList/index.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","color","bg","hover","active","projectFirestore","firestore","timestamp","FieldValue","serverTimestamp","grey","buttonColorsCss","primary","css","spacing","xs","s","m","l","xl","getSpacing","key","contentWidth","default","baseFormControlStyle","BaseInput","styled","input","BaseTextArea","textarea","BaseButton","button","Wrapper","div","getContentWidth","VerticalLayout","HorizontalLayout","AddLink","useState","error","setError","url","setUrl","description","setDescription","createNewPost","createdAt","addLink","e","a","preventDefault","setTimeout","collection","add","onSubmit","style","placeholder","value","onChange","target","logo","src","alt","width","height","initialState","term","status","searchSlice","createSlice","name","reducers","set","state","action","payload","actions","Search","setTerm","dispatch","useDispatch","type","HeaderContainer","header","HeaderWrapper","Header","useFirestore","docs","setDocs","useEffect","unsub","orderBy","onSnapshot","snap","documents","forEach","doc","push","data","id","LinkItemWrapper","li","LinkItem","link","href","rel","title","LinkListWrapper","ul","LinkList","map","App","store","configureStore","reducer","search","searchReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.94142da1.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDrYdVo7ZeWU3AVYX8iFo7qWAK6gCpMgwQ\",\n    authDomain: \"agencia-gift.firebaseapp.com\",\n    projectId: \"agencia-gift\",\n    storageBucket: \"agencia-gift.appspot.com\",\n    messagingSenderId: \"404011545951\",\n    appId: \"1:404011545951:web:7f4a77ec0dce84fb6432ea\",\n    measurementId: \"G-KE55SGFC5L\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst projectFirestore = firebase.firestore();\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\n\nexport { projectFirestore, timestamp };\n","import { css } from \"styled-components\";\n\nexport const grey = {\n    light: '#e7e7e7',\n    mid: '#999',\n    dark: '#666',\n};\n\nconst createButtonPallete = (color, bg, hover, active) => css`\n    color: ${color};\n    background-color: ${bg};\n\n    &:hover, &:focus {\n        background-color: ${hover || bg};\n    }\n\n    &:active {\n        background-color: ${active || hover || bg};\n    }\n`;\n\nexport const buttonColorsCss = {\n    primary: createButtonPallete('#fff', '#0062b5', '#008aff', '#0062b5'),\n};\n","export const spacing = {\n    xs: 4,\n    s: 8,\n    m: 16,\n    l: 32,\n    xl: 64,\n};\n\nexport const getSpacing = (key = 'm') => `${spacing[key] || spacing.m}px`;\n\nexport const contentWidth = {\n    default: 800,\n};\n\nexport const getContentWidth = (key = 'default') => `${contentWidth[key] || contentWidth.default}px`;\n","import styled, { css } from \"styled-components\";\nimport { buttonColorsCss, grey } from \"../constants/colors\";\nimport { getSpacing } from \"../constants/sizes\";\n\nconst baseFormControlStyle = css`\n    font: inherit;\n    line-height: 1.5;\n    padding: ${getSpacing('s')};\n    border: 1px solid ${grey.mid};\n    border-radius: 0;\n`;\n\nexport const BaseInput = styled.input`\n    ${baseFormControlStyle}\n`;\n\nexport const BaseTextArea = styled.textarea`\n    ${baseFormControlStyle}\n`;\n\nexport const BaseButton = styled.button`\n    ${baseFormControlStyle}\n    ${buttonColorsCss.primary};\n`;\n","import styled from \"styled-components\";\nimport { getContentWidth, getSpacing } from \"../constants/sizes\";\n\nexport const Wrapper = styled.div`\n    max-width: ${getContentWidth()};\n    margin: auto;\n`;\n\nexport const VerticalLayout = styled.div`\n    display: flex;\n    flex-direction: column;\n\n    > * {\n        margin-top: ${getSpacing('xs')};\n        margin-bottom: ${getSpacing('xs')};\n    }\n`;\n\nexport const HorizontalLayout = styled.div`\n    display: flex;\n    justify-content: space-between;\n`;\n","import React, { useState } from 'react';\nimport { projectFirestore, timestamp } from '../../firebase/config';\nimport { BaseButton, BaseInput, BaseTextArea } from '../form';\nimport { HorizontalLayout, VerticalLayout } from '../layout';\n\nfunction AddLink() {\n    const [error, setError] = useState('');\n    const [url, setUrl] = useState('');\n    const [description, setDescription] = useState('');\n    \n    const fail = (message) => {\n        setError(message);\n        setTimeout(setError, 3000);\n    };\n\n    const createNewPost = () => {\n        const createdAt = timestamp();\n        return { url, description, createdAt };\n    };\n\n    const addLink = async (e) => {\n        e.preventDefault();\n\n        if (!url) {\n            fail('Informe o link para compartilhar.');\n            return;\n        }\n\n        await projectFirestore.collection('links').add(createNewPost());\n        setUrl('');\n        setDescription('');\n    };\n\n    return (\n        <form onSubmit={addLink}>\n            <HorizontalLayout>\n                <p>Compartilhar link</p>\n                {error && <p style={{ color: 'red' }}>{error}</p>}\n            </HorizontalLayout>\n\n            <VerticalLayout>\n                <BaseInput placeholder=\"https://\" value={url} onChange={(e) => setUrl(e.target.value)} />\n                <BaseTextArea placeholder=\"Description...\" value={description} onChange={(e) => setDescription(e.target.value)} />\n                <p>{`{ url: \"${url}\", description: \"${description}\" }`}</p>\n                <BaseButton>Publicar</BaseButton>\n            </VerticalLayout>\n        </form>\n    )\n}\n\nexport default AddLink\n","export const logo = {\n    src: 'https://agenciagift.github.io/favicon.png',\n    alt: 'AgÃªncia Gift',\n    width: 49.25,\n    height: 50,\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { status } from \"../constants\";\n\nconst initialState = {\n    value: {\n        term: '',\n    },\n    status: status.IDLE,\n};\n\nexport const searchSlice = createSlice({\n    name: 'search',\n    initialState,\n    reducers: {\n        set: (state, action) => {\n            state.value = action.payload;\n        },\n    }\n})\n\nexport const { set } = searchSlice.actions;\n\nexport const selectSearch = (state) => state.search.value;\n\nexport default searchSlice.reducer;\n","export const status = {\n    IDLE: 'IDLE',\n    LOADING: 'LOADING',\n};\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { set } from '../../app/slices/search';\nimport { BaseButton, BaseInput } from '../form';\n\nexport default function Search() {\n    const [term, setTerm] = useState('');\n    const dispatch = useDispatch();\n\n    const submitForm = (e) => {\n        e.preventDefault();\n\n        dispatch(set({ term }));\n    };\n\n    return (\n        <form onSubmit={submitForm}>\n            <BaseInput type=\"text\" value={term} onChange={(e) => setTerm(e.target.value)} />\n            <BaseButton>Pesquisar</BaseButton>\n        </form>\n    )\n}\n","import styled from \"styled-components\";\nimport { grey } from \"../../constants/colors\";\nimport { getSpacing } from \"../../constants/sizes\";\nimport { Wrapper } from \"../layout\";\n\nexport const HeaderContainer = styled.header`\n    padding: ${getSpacing('s')};\n    background-color: ${grey.light};\n`;\n\nexport const HeaderWrapper = styled(Wrapper)`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`;\n","import React from 'react';\nimport { logo } from '../../constants/appConfig';\nimport Search from '../Search';\nimport { HeaderContainer, HeaderWrapper } from './styled';\n\nexport default function Header() {\n    return (\n        <HeaderContainer>\n            <HeaderWrapper>\n                <img {...logo} alt={logo.alt} />\n                <Search />\n            </HeaderWrapper>\n        </HeaderContainer>\n    )\n}\n","import { useEffect, useState } from 'react';\nimport { projectFirestore } from '../firebase/config';\n\nconst useFirestore = (collection) => {\n    const [docs, setDocs] = useState([]);\n\n    useEffect(() => {\n        const unsub = projectFirestore.collection(collection)\n            .orderBy('createdAt', 'desc')\n            .onSnapshot(snap => {\n                let documents = [];\n                snap.forEach(doc => {\n                    documents.push({ ...doc.data(), id: doc.id });\n                });\n                setDocs(documents);\n            });\n\n        return () => unsub();\n    }, [collection]);\n\n    return { docs };\n}\n\nexport default useFirestore;","import styled from \"styled-components\";\nimport { getSpacing } from \"../../constants/sizes\";\n\nexport const LinkItemWrapper = styled.li`\n    margin-bottom: ${getSpacing('l')};\n`;","import React from 'react'\nimport { LinkItemWrapper } from './styled';\n\nexport default function LinkItem({ link }) {\n    return (\n        <LinkItemWrapper key={link.id}>\n            <p>\n                <strong>\n                    <a href={link.url} target=\"_blank\" rel=\"noreferrer\">\n                        {link.title || link.url}\n                    </a>\n                </strong>\n            </p>\n            <p>{link.description}</p>\n        </LinkItemWrapper>\n    );\n}\n","import styled from \"styled-components\";\nimport { getSpacing } from \"../../constants/sizes\";\n\nexport const LinkListWrapper = styled.ul`\n    list-style: none;\n    margin: ${getSpacing('xl')} 0;\n    padding: 0;\n`;","import React from 'react';\nimport useFirestore from '../../hooks/useFirestore';\nimport LinkItem from '../LinkItem';\nimport { LinkListWrapper } from './styled';\n\nexport default function LinkList() {\n    const { docs } = useFirestore('links');\n\n    return (\n        <LinkListWrapper>\n            {docs.map((link) => (\n                <LinkItem key={link.id} link={link} />\n            ))}\n        </LinkListWrapper>\n    )\n}\n","import React from 'react';\nimport AddLink from './components/AddLink';\nimport Header from './components/Header';\nimport { Wrapper } from './components/layout';\nimport LinkList from './components/LinkList';\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Wrapper>\n        <AddLink />\n        <LinkList />\n      </Wrapper>\n    </>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport searchReducer from './slices/search';\n\nexport const store = configureStore({\n  reducer: {\n    search: searchReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}